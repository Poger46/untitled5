Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1640786752446)
+++ b/.idea/modules.xml	(date 1640786752446)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/untitled5.iml" filepath="$PROJECT_DIR$/untitled5.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/groovy_4_0_0_beta_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/groovy_4_0_0_beta_1.xml b/.idea/libraries/groovy_4_0_0_beta_1.xml
new file mode 100644
--- /dev/null	(date 1640786752456)
+++ b/.idea/libraries/groovy_4_0_0_beta_1.xml	(date 1640786752456)
@@ -0,0 +1,68 @@
+<component name="libraryTable">
+  <library name="groovy-4.0.0-beta-1" type="groovy-sdk">
+    <properties version="4.0.0-beta-1" />
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/lib/groovy-datetime-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-astbuilder-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-cli-picocli-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-cli-commons-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-ant-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-contracts-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-dateutil-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-console-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-docgenerator-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-jmx-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-groovydoc-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-ginq-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-jsr223-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-groovysh-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-json-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-macro-library-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-nio-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-servlet-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-macro-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-sql-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-testng-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-test-junit5-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-toml-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-templates-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-test-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-typecheckers-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-swing-4.0.0-beta-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-xml-4.0.0-beta-1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/lib/groovy-astbuilder-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-cli-commons-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-ant-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-cli-picocli-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-contracts-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-datetime-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-console-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-dateutil-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-docgenerator-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-ginq-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-jsr223-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-groovydoc-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-jmx-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-macro-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-json-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-macro-library-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-groovysh-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-nio-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-servlet-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-sql-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-test-junit5-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-templates-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-test-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-swing-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-testng-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-toml-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-typecheckers-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-xml-4.0.0-beta-1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/groovy-4.0.0-beta-1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1640786752472)
+++ b/.idea/misc.xml	(date 1640786752472)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1640786757439)
+++ b/.idea/.gitignore	(date 1640786757439)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: src/matrix/Matrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/matrix/Matrix.java b/src/matrix/Matrix.java
new file mode 100644
--- /dev/null	(date 1640786901324)
+++ b/src/matrix/Matrix.java	(date 1640786901324)
@@ -0,0 +1,111 @@
+package matrix;
+
+import exception.MyExceptionClass;
+
+public class Matrix {
+
+    int row;
+    int column;
+    int[][] matrix;
+
+    public Matrix(int row, int column) {
+        this.row = row;
+        this.column = column;
+        this.matrix = new int[this.row][this.column];
+        for (int i=0; i<this.row; i++) {
+            for (int j=0; j<this.column; j++) {
+                this.setElement(i,j,0);
+            }
+        }
+    }
+
+    public void fill() {
+        for (int i=0; i<this.row; i++) {
+            for (int j=0; j<this.column; j++) {
+                this.setElement(i,j,(int)(Math.random()*10));
+            }
+        }
+    }
+
+    public Matrix sum(Matrix matrixAddend) {
+        if (row != matrixAddend.row || column != matrixAddend.column) {
+            throw new MyExceptionClass("Wrong! These matrixes are of different sizes, so we can't sum them!");
+        } else {
+            Matrix matrixSum = new Matrix(row, column);
+            for (int i = 0; i<row; i++) {
+                for (int j = 0; j<column; j++) {
+                    int elm = matrixAddend.getElement(i,j)+this.getElement(i,j);
+                    matrixSum.setElement(i,j,elm);
+                }
+            }
+            return matrixSum;
+        }
+    }
+
+    public Matrix product(Matrix matrixFactor) {
+        if (column != matrixFactor.row) {
+            throw new MyExceptionClass("Wrong! These matrixes are of different sizes, so we can't multyply them!");
+        } else {
+            Matrix matrixProduct = new Matrix(row, column);
+            for (int i=0; i<row; i++) {
+                for (int j=0; j<matrixFactor.column; j++) {
+                    matrixProduct.setElement(i,j,0);
+                    for (int k=0; k<column; k++) {
+                        matrixProduct.setElement(i,j, matrixProduct.getElement(i,j) + (this.getElement(i,k)*matrixFactor.getElement(k,j)));
+                    }
+                }
+            }
+            return matrixProduct;
+        }
+    }
+
+    public void setElement(int row, int column, int value) { //задание элемента
+        if (row >= this.row || column >= this.column) {
+            throw new MyExceptionClass("Wrong! Went out of range of the matrix");
+        } else {
+            this.matrix[row][column] = value;
+        }
+    }
+
+    public int getElement(int row, int column) { //получение элемента
+        if (row >= this.row || column >= this.column) {
+            throw new MyExceptionClass("Wrong! Went out of range of the matrix");
+        } else {
+            return this.matrix[row][column];
+        }
+    }
+
+    public String toString() {
+        StringBuilder str = new StringBuilder();
+        for (int i = 0; i<row; i++) {
+            for (int j = 0; j<column; j++) {
+                str.append(" ").append(getElement(i,j));
+            }
+            str.append("\n");
+        }
+        return str.toString();
+    }
+
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+        if (!(obj instanceof Matrix))
+            return false;
+        Matrix m = (Matrix) obj; //сужение типа с типа Object до типа Matrix
+        if (row != m.row || column != m.column)
+            return false;
+
+        int flag = 0;
+        for (int i = 0; i < row; i++) {
+            for (int j = 0; j < column; j++) {
+                if (this.getElement(i, j) != m.getElement(i, j))
+                    flag++;
+            }
+        }
+        if (flag == 0)
+            return true;
+        return false;
+    }
+}
\ No newline at end of file
Index: src/matrix/SquareMatrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/matrix/SquareMatrix.java b/src/matrix/SquareMatrix.java
new file mode 100644
--- /dev/null	(date 1640786938734)
+++ b/src/matrix/SquareMatrix.java	(date 1640786938734)
@@ -0,0 +1,35 @@
+package matrix;
+
+import exception.MyExceptionClass;
+
+public final class SquareMatrix extends Matrix {
+
+    public SquareMatrix(int size) {
+        super(size,size);
+        int n = size;
+        for (int i = 0; i < n; i++) {
+            for (int j = 0; j < n; j++) {
+                if (i == j) {
+                    this.matrix[i][j]=1;
+                } else {
+                    this.matrix[i][j]=0;
+                }
+            }
+        }
+    }
+
+    public SquareMatrix sum(SquareMatrix squareMatrixAddend) {
+        if (row != squareMatrixAddend.row && column != squareMatrixAddend.column) {
+            throw new MyExceptionClass("Wrong! These unit matrixes are of different sizes, so we can't sum them!");
+        } else {
+            SquareMatrix squareMatrixSum = new SquareMatrix(row);
+            int n = row;
+            for (int i = 0; i<n; i++) {
+                for (int j = 0; j<n; j++) {
+                    squareMatrixSum.matrix[i][j] += squareMatrixAddend.matrix[i][j]+this.matrix[i][j];
+                }
+            }
+            return squareMatrixSum;
+        }
+    }
+}
\ No newline at end of file
Index: src/exception/MyExceptionClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/exception/MyExceptionClass.java b/src/exception/MyExceptionClass.java
new file mode 100644
--- /dev/null	(date 1640786962942)
+++ b/src/exception/MyExceptionClass.java	(date 1640786962942)
@@ -0,0 +1,6 @@
+package exception;
+public class MyExceptionClass extends RuntimeException{
+    public MyExceptionClass(String message) {
+        super(message);
+    }
+}
\ No newline at end of file
Index: src/Lab3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lab3.java b/src/Lab3.java
new file mode 100644
--- /dev/null	(date 1640786867749)
+++ b/src/Lab3.java	(date 1640786867749)
@@ -0,0 +1,156 @@
+import exception.MyExceptionClass;
+import matrix.SquareMatrix;
+import matrix.Matrix;
+import matrix.SpiralMatrix;
+
+import java.util.Scanner;
+
+public class Lab3 {
+
+    public static void main(String[] args) {
+        System.out.println("What do you want from me?");
+        System.out.println("1 - Create a matrix");
+        System.out.println("2 - Create a unit matrix");
+        System.out.println("3 - Check the Sum");
+        System.out.println("4 - Check the Product of matrixes");
+        System.out.println("5 - Check the Product of unit matrixes");
+        System.out.println("6 - Check the Set");
+        System.out.println("7 - Check the Get");
+        System.out.println("8 - Check if equals");
+
+        Scanner sc = new Scanner(System.in);
+        String x = sc.nextLine();
+
+        boolean value1 = x.contains("1");
+        if (value1 == true) {
+            System.out.println("Put in the matrix size");
+            int r = sc.nextInt();
+            int c = sc.nextInt();
+            Matrix m = new Matrix(r, c);
+            System.out.println(m);
+        }
+
+        boolean value2 = x.contains("2");
+        if (value2 == true) {
+            System.out.println("Put in the matrix size");
+            int n = sc.nextInt();
+            SquareMatrix u = new SquareMatrix(n);
+            System.out.println(u);
+        }
+
+        boolean value3 = x.contains("3");
+        if (value3 == true) {
+            System.out.println("Put in the size of matrix #1");
+            int n11 = sc.nextInt();
+            int n12 = sc.nextInt();
+            Matrix a = new Matrix(n11, n12);
+            a.fill();
+            System.out.println(a);
+            System.out.println("Put in the size of matrix #2");
+            int n21 = sc.nextInt();
+            int n22 = sc.nextInt();
+            Matrix b = new Matrix(n21, n22);
+            b.fill();
+            System.out.println(b);
+            try {
+                System.out.println(a.sum(b));
+            } catch (Exception e) {
+                System.out.println(e.getMessage());
+            }
+        }
+
+        boolean value4 = x.contains("4");
+        if (value4 == true) {
+            System.out.println("Put in the size of matrix #1");
+            int n11 = sc.nextInt();
+            int n12 = sc.nextInt();
+            Matrix a = new Matrix(n11, n12);
+            a.fill();
+            System.out.println(a);
+            System.out.println("Put in the size of matrix #2");
+            int n21 = sc.nextInt();
+            int n22 = sc.nextInt();
+            Matrix b = new Matrix(n21, n22);
+            b.fill();
+            System.out.println(b);
+            try {
+                System.out.println(a.product(b));
+            } catch (Exception e) {
+                System.out.println(e.getMessage());
+            }
+        }
+
+        boolean value5 = x.contains("5");
+        if (value5 == true) {
+            System.out.println("Put in the size of matrix #1");
+            int n1 = sc.nextInt();
+            SquareMatrix a = new SquareMatrix(n1);
+            a.fill();
+            System.out.println(a);
+            System.out.println("Put in the size of matrix #2");
+            int n2 = sc.nextInt();
+            SquareMatrix b = new SquareMatrix(n2);
+            b.fill();
+            System.out.println(b);
+            try {
+                System.out.println(a.product(b));
+            } catch (Exception e) {
+                System.out.println(e.getMessage());
+            }
+        }
+
+        boolean value6 = x.contains("6");
+        if (value6 == true) {
+            System.out.println("Put in the size of matrix");
+            int r = sc.nextInt();
+            int c = sc.nextInt();
+            Matrix a = new Matrix(r, c);
+            a.fill();
+            System.out.println(a);
+            System.out.println("Put in the coordinates and its new value");
+            int r1 = sc.nextInt();
+            int c1 = sc.nextInt();
+            int val = sc.nextInt();
+            try {
+                a.setElement(r1 - 1, c1 - 1, val);
+            } catch (Exception e) {
+                System.out.println(e.getMessage());
+            }
+            System.out.println(a);
+        }
+
+        boolean value7 = x.contains("7");
+        if (value7 == true) {
+            System.out.println("Put in the size of matrix");
+            int r = sc.nextInt();
+            int c = sc.nextInt();
+            Matrix a = new Matrix(r, c);
+            a.fill();
+            System.out.println(a);
+            System.out.println("Put in the coordinates of value you want to get");
+            int r1 = sc.nextInt();
+            int c1 = sc.nextInt();
+            try {
+                System.out.println(a.getElement(r1 - 1, c1 - 1));
+            } catch (Exception e) {
+                System.out.println(e.getMessage());
+            }
+        }
+
+        boolean value8 = x.contains("8");
+        if (value8 == true) {
+            SquareMatrix m1 = new SquareMatrix(4);
+            m1.fill();
+            System.out.println(m1);
+            SquareMatrix m2 = new SquareMatrix(4);
+            m2.fill();
+            System.out.println(m2);
+            if (m1.equals(m2)) {
+                System.out.println("They're equal");
+            } else {
+                System.out.println("They're not equal");
+            }
+        }
+
+    }
+}
\ No newline at end of file
Index: src/matrix/SpiralMatrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/matrix/SpiralMatrix.java b/src/matrix/SpiralMatrix.java
new file mode 100644
--- /dev/null	(date 1640787056713)
+++ b/src/matrix/SpiralMatrix.java	(date 1640787056713)
@@ -0,0 +1,48 @@
+package matrix;
+
+public final class SpiralMatrix extends Matrix { // доп задание!!
+
+    public SpiralMatrix(int row, int column) {
+        super(row, column);
+        int top = 0; // верх
+        int bottom = row-1; // низ
+        int left = 0; // лево
+        int right = column-1; // право
+        int direction = 1; // направление слева направо
+        int value = 1;
+        while (top <= bottom && left <= right) {
+            if (direction == 1) {
+                for (int i = left; i <= right; ++i) {
+                    this.matrix[top][i] = value;
+                    ++value;
+                }
+                ++top; // сужаем верх
+                direction = 2; // направление сверху вниз
+            }
+            else if (direction == 2) {
+                for (int i = top; i<=bottom; ++i) {
+                    this.matrix[i][right] = value;
+                    ++value;
+                }
+                --right; // сужаем право
+                direction = 3; // направление справа налево
+            }
+            else if (direction == 3) {
+                for (int i = right; i>= left; --i) {
+                    this.matrix[bottom][i] = value;
+                    ++value;
+                }
+                --bottom; // сужаем низ
+                direction = 4; // направление снизу вверх
+            }
+            else if (direction == 4) {
+                for (int i = bottom; i >= top; --i) {
+                    this.matrix[i][left] = value;
+                    ++value;
+                }
+                ++left; // сужаем лево
+                direction = 1; // снова идём справа налево
+            }
+        }
+    }
+}
\ No newline at end of file
Index: untitled5.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/untitled5.iml b/untitled5.iml
new file mode 100644
--- /dev/null	(date 1640786752424)
+++ b/untitled5.iml	(date 1640786752424)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="groovy-4.0.0-beta-1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1640787178170)
+++ b/.gitignore	(date 1640787178170)
@@ -0,0 +1,2 @@
+# Project exclude paths
+/out/
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1640786963308)
+++ b/.idea/uiDesigner.xml	(date 1640786963308)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
